#Server configurations:
server.port=8084
spring.data.mongodb.uri=${MOGODB_URI}

server.error.include-message=always
server.error.include-binding-errors=always

#JWT Token
jwt.secret-key=${JWT_SECRET}

#Cloudcarafka
spring.kafka.bootstrap-servers=glider.srvs.cloudkafka.com:9094
spring.kafka.properties.security.protocol=SASL_SSL
spring.kafka.properties.sasl.mechanism=SCRAM-SHA-256
spring.kafka.properties.sasl.jaas.config=${KAFKA_CONFIG}

#Spring Cloud Stream
spring.cloud.function.definition=receiveProfile;receiveDataFromProblem;sendData;
#IN (Group4)
# authenticated Profile from Accounting ->
spring.cloud.stream.bindings.receiveProfile-in-0.destination=${KAFKA_KEY}-authenticated
spring.cloud.stream.bindings.receiveProfile-in-0.group=${KAFKA_KEY}-authenticatedGroup4
# Problem data ->
spring.cloud.stream.bindings.receiveDataFromProblem-in-0.destination=${KAFKA_KEY}-problemData
spring.cloud.stream.bindings.receiveDataFromProblem-in-0.group=${KAFKA_KEY}-problemDataGroup4

#OUT
# To deliver Community data to all Services ->
spring.cloud.stream.bindings.sendData-out-0.destination=${KAFKA_KEY}-communityData

spring.kafka.consumer.auto-offset-reset=earliest
